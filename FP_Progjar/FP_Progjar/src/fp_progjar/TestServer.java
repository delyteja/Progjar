/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fp_progjar;


/**
 *
 * @author waswib
 */

import java.util.TimerTask;
import java.util.Timer;
import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.UnknownHostException;


public class TestServer extends javax.swing.JFrame {

    /** Creates new form TestServer */
    public TestServer() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtLog = new javax.swing.JTextArea();
        btnTest = new javax.swing.JButton();
        btnStop = new javax.swing.JButton();
        txtIp = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtPort = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtLog.setColumns(20);
        txtLog.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtLog.setRows(5);
        jScrollPane1.setViewportView(txtLog);

        btnTest.setText("Test");
        btnTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestActionPerformed(evt);
            }
        });

        btnStop.setText("Stop");
        btnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopActionPerformed(evt);
            }
        });

        txtIp.setText("224.0.0.3");

        jLabel1.setText("Ip Group");

        jLabel2.setText("Port");

        txtPort.setText("8888");
        txtPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPortActionPerformed(evt);
            }
        });

        jButton1.setText("Start");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnTest)
                        .addGap(18, 18, 18)
                        .addComponent(btnStop))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(23, 23, 23)
                        .addComponent(txtIp, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jLabel2)
                        .addGap(23, 23, 23)
                        .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)))
                .addContainerGap(93, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTest)
                    .addComponent(btnStop))
                .addContainerGap(66, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>

    private void btnTestActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        this.txtLog.append("Starting timer " + "\n");
       // task = new RunMeTask(this.txtLog);
         task = new RunMeTask(this);
        timer = new Timer();
     timer.schedule(task, 1000,2000);


    }

    private void btnStopActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
             this.timer.cancel();
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        // this.txtLog.append(this.txtIp.getText());

        this.INET_ADDR = this.txtIp.getText();
        this.PORT = Integer.parseInt(this.txtPort.getText());

        try {
              serverSocket = new DatagramSocket();
              addr = InetAddress.getByName(INET_ADDR);
              this.txtLog.append("Creating multicast socket at " + this.txtIp.getText() + " with port " + this.txtPort.getText() + "\n");

        }
        catch (Exception e){

        }
    }

    public void sendMessage(String msg){


           try {
             DatagramPacket msgPacket = new DatagramPacket(msg.getBytes(),
                        msg.getBytes().length, addr, PORT);
              serverSocket.send(msgPacket);
           }
           catch (Exception e){

           }


    }

    private void txtPortActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TestServer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton btnStop;
    private javax.swing.JButton btnTest;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtIp;
    private javax.swing.JTextArea txtLog;
    private javax.swing.JTextField txtPort;
    // End of variables declaration
    TimerTask task ;
    Timer timer ;
    String INET_ADDR;
    int PORT ;
    DatagramSocket serverSocket;
    InetAddress addr;

    public class RunMeTask extends TimerTask
    {

          private javax.swing.JTextArea myLog;
          int i=0;

           TestServer guiInduk;


            public RunMeTask (TestServer gui){

                this.guiInduk= gui;
                // this.myLog.append(" Nulis dari instan kelas runMeTask \n");
            }
            public RunMeTask (javax.swing.JTextArea log){

                this.myLog = log;
                // this.myLog.append(" Nulis dari instan kelas runMeTask \n");
            }


            public void kirimPesan(){
                i=i+1;
                this.guiInduk.sendMessage("Soal no " + i + " Sebutkan nama Presiden Amerika ke " + i);
                this.guiInduk.txtLog.append("Server send " + "Soal no " + i + " Sebutkan nama Presiden Amerika ke " + i + "\n");

            }


            @Override
            public void run() {
                    //System.out.println("Run Me ~" + i);
                    //this.myLog.append(i +". Timer runnning from run me task "+ "\n");

                kirimPesan();

            }
    }


}